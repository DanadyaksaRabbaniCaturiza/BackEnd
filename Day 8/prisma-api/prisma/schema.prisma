// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:andromeda1@localhost:3306/learn_prisma"
}


model Student {
  id Int @id @default(autoincrement())
  username String
  fullname String
  password String
  isGraduated Boolean 
  program String
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
  MapStudentClass MapStudentClass[]
} 

model Lecturer {
  id Int @id @default(autoincrement())
  username String
  fullname String
  password String
  isActive Boolean 
  program String
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
  MapLecturerClass MapLecturerClass[]
} 

model Branch {
  id Int @id @default(autoincrement())
  name String
  location String
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())
  Class Class[]
} 

model Class {
  id Int @id @default(autoincrement())
  name String
  startAt DateTime @default(now())
  endAt DateTime @default(now())
  updatedAt DateTime @default(now())
  createdAt DateTime @default(now())

  BranchId Int 
  Branch Branch @relation(fields:[BranchId],references: [id], onDelete:NoAction, onUpdate:NoAction)
  MapStudentClass MapStudentClass[]
  MapLecturerClass MapLecturerClass[]
}

model MapStudentClass{
  StudentId Int
  Student Student @relation(fields: [StudentId] , references: [id], onDelete: NoAction,onUpdate: NoAction) 
  ClassId Int
  Class Class @relation(fields: [ClassId] , references: [id], onDelete: NoAction,onUpdate: NoAction) 

  @@id([StudentId,ClassId])
}

model MapLecturerClass{
  LecturerId Int
  Lecturer Lecturer @relation(fields: [LecturerId] , references: [id], onDelete: NoAction,onUpdate: NoAction) 
  ClassId Int
  Class Class @relation(fields: [ClassId] , references: [id], onDelete: NoAction,onUpdate: NoAction) 

  @@id([LecturerId,ClassId])
}